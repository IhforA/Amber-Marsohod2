File in this directory:
disk/initrd                  An initial ram disk image mounted on linux start
create_initrd                script which creates initial ram disk image from ../hello-world application
patch-2.4.27-vrs1.bz2        ARM Linux patch file
patch-2.4.27-myamber2.tar.jz My Amber Linux patch file
README.MY                    This file
vmlinux                      Kernel executable file


# +++++++++++++++++++++++++++++++++++++++++++
# How to run Amber Linux kernel on a Marsohod2 development board
# +++++++++++++++++++++++++++++++++++++++++++
1. Download the bitfile to configure the FPGA using Altera USB-Blaster or MBFTDI programmer
2. Connect TeraTerm to the serial port on the FPGA to connect to the boot loader (baud 921600)
3. Download the disk image "initrd" using XMODEM/1K serial protocol
> b 700000
    Then select in TeraTerm menu <File><Transfer><XMODEM><SEND> the file "initrd"
    In TeraTerm send dialog mark checkboxk "1K" protocol.

4. Download the kernel image
> l
    Then select in TeraTerm menu <File><Transfer><XMODEM><SEND> the file "vmlinux"

5. Execute the kernel
> j 80000


# +++++++++++++++++++++++++++++++++++++++++++
# How to build Amber Linux kernel from source
# +++++++++++++++++++++++++++++++++++++++++++
# If you also want to create your own initrd disk image, 
# then follow that procedure (below) first.

1) compile "sw/hello-world" application
2) run script "create_initrd"

New folder "disk" appear with a file "initrd".

# +++++++++++++++++++++++++++++++++++++++++++
# building linux
# +++++++++++++++++++++++++++++++++++++++++++

# get and unpack kernel source
wget http://www.kernel.org/pub/linux/kernel/v2.4/linux-2.4.27.tar.gz
tar zxf linux-2.4.27.tar.gz
ln -s linux-2.4.27 linux
cd ${LINUX_WORK_DIR}/linux

#Apply 2 patch files
cp ${AMBER_BASE}/sw/vmlinux/patch-2.4.27-vrs1.bz2 .
cp ${AMBER_BASE}/sw/vmlinux/patch-2.4.27-amber2.bz2 .
bzip2 -d patch-2.4.27-vrs1.bz2
tar -zxf patch-2.4.27-myamber2.tar.gz
patch -p1 < patch-2.4.27-vrs1
patch -p1 < patch-2.4.27-myamber2

# Build the kernel and create a .mem file for simulations

# select basic kernel configuration
make a5k_config

# run configuration editor but do not edit, just exit and save it
make menuconfig


make dep
make vmlinux

cp vmlinux vmlinux_unstripped
${AMBER_CROSSTOOL}-objcopy -R .comment -R .note vmlinux
${AMBER_CROSSTOOL}-objcopy --change-addresses -0x02000000 vmlinux
$AMBER_BASE/sw/tools/amber-elfsplitter vmlinux > vmlinux.mem

# Add the ram disk image to the .mem file
# You can use one of the provided disk images or generate your own (see below)
$AMBER_BASE/sw/tools/amber-bin2mem ${AMBER_BASE}/sw/vmlinux/initrd-200k-hello-world 800000 >> vmlinux.mem
${AMBER_CROSSTOOL}-objdump -C -S -EL vmlinux_unstripped > vmlinux.dis
cp vmlinux.mem $AMBER_BASE/sw/vmlinux/vmlinux.mem
cp vmlinux.dis $AMBER_BASE/sw/vmlinux/vmlinux.dis

